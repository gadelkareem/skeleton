

stages:
  - build-backend
  - build-frontend
  - push-docker


variables:
  GIT_STRATEGY: fetch
  BACKEND_DIR: "${CI_PROJECT_DIR}/src/backend"
  FRONTEND_DIR: "${CI_PROJECT_DIR}/src/frontend"
  BUILD_DIR: "${CI_PROJECT_DIR}/src/backend/build"
  CACHE_DIR: "${CI_PROJECT_DIR}/cache"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - cache/

before_script:
  - mkdir -p $CACHE_DIR
  - mkdir -p $BUILD_DIR
default:
  image: gadelkareem/golang-nodejs:latest

backend:build:
  stage: build-backend
  services:
    - postgres:12.2-alpine
  variables:
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    POSTGRES_HOST_AUTH_METHOD: trust
    DATABASE_URL: postgres://skeleton_backend:dev_awTf9d2GceKRNzhkCb4H5B8nfmq@postgres/skeleton_backend?sslmode=disable
    BEEGO_RUNMODE: test
    CACHE_TYPE: memory
  script:
    - export GOPATH="$CACHE_DIR"
    # init postgres
    - PGHOST=postgres PGUSER=postgres PGPASSWORD=postgres bash ./docker/db/db.sh
    - cd $BACKEND_DIR
    - go mod tidy
    - go get ./...
    - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags '-extldflags "-static"' -o skeleton
    # migration for tests
    - chmod +x skeleton && ./skeleton migrate up
    - go test -v ./... -count=1
    - mv skeleton "$BUILD_DIR/"
    - cp -r migrations "$BUILD_DIR/"
    - cp -r conf "$BUILD_DIR/"
  needs: []
  artifacts:
    paths:
      - $BUILD_DIR
    expire_in: 1 hour

frontend:build:
  stage: build-frontend
  variables:
    API_URL: /api/v1
  script:
    - yarn config set cache-folder $CACHE_DIR
    - cd "$FRONTEND_DIR"
    - yarn install
    - yarn test
    - yarn generate
    - mv src/dist "$BUILD_DIR/"
  needs: []
  artifacts:
    paths:
      - $BUILD_DIR
    expire_in: 1 hour


docker:push:
  stage: push-docker
  only:
    - master
  cache: {}
  image: docker:19.03.11
  services:
    - docker:19.03.11-dind
  variables:
    # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_HUB: docker.io
    DOCKER_HUB_IMAGE: skeleton
    DOCKER_HUB_IMAGE_URL: "${DOCKER_HUB}/${DOCKER_HUB_USER}/${DOCKER_HUB_IMAGE}"
  script:
    - cp docker/Dockerfile.gitlab "$BUILD_DIR/Dockerfile"
    - cd $BUILD_DIR
    - ls -al
    - docker build -t $DOCKER_HUB_IMAGE_URL:$CI_COMMIT_SHA .
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD $DOCKER_HUB
    - docker push $DOCKER_HUB_IMAGE_URL:$CI_COMMIT_SHA
    - docker tag $DOCKER_HUB_IMAGE_URL:$CI_COMMIT_SHA $DOCKER_HUB_IMAGE_URL:latest
    - docker push $DOCKER_HUB_IMAGE_URL:latest


